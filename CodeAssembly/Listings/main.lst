


ARM Macro Assembler    Page 1 


    1 00000000         ; UARTIntTestMain.s
    2 00000000         ; Runs on LM4F120/TM4C123
    3 00000000         ; Tests the UART0 to implement bidirectional data transf
                       er to and from a
    4 00000000         ; computer running PuTTY.  This time, interrupts and FIF
                       Os
    5 00000000         ; are used.
    6 00000000         ; This file is named "UART2" because it is the second UA
                       RT example.
    7 00000000         ; It is not related to the UART2 module on the microcont
                       roller.
    8 00000000         ; Daniel Valvano
    9 00000000         ; September 12, 2013
   10 00000000         
   11 00000000         ;  This example accompanies the book
   12 00000000         ;  "Embedded Systems: Real Time Interfacing to Arm Corte
                       x M Microcontrollers",
   13 00000000         ;  ISBN: 978-1463590154, Jonathan Valvano, copyright (c)
                        2015
   14 00000000         ;  Program 5.11 Section 5.6, Program 3.10
   15 00000000         ;
   16 00000000         ;Copyright 2015 by Jonathan W. Valvano, valvano@mail.ute
                       xas.edu
   17 00000000         ;   You may use, edit, run or distribute this file
   18 00000000         ;   as long as the above copyright notice remains
   19 00000000         ;THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHET
                       HER EXPRESS, IMPLIED
   20 00000000         ;OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WA
                       RRANTIES OF
   21 00000000         ;MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE AP
                       PLY TO THIS SOFTWARE.
   22 00000000         ;VALVANO SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR 
                       SPECIAL, INCIDENTAL,
   23 00000000         ;OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
   24 00000000         ;For more information about my classes, my research, and
                        my books, see
   25 00000000         ;http://users.ece.utexas.edu/~valvano/
   26 00000000         
   27 00000000         ; U0Rx (VCP receive) connected to PA0
   28 00000000         ; U0Tx (VCP transmit) connected to PA1
   29 00000000         
   30 00000000         ; standard ASCII symbols
   31 00000000 0000000D 
                       CR      EQU              0x0D        ;/r
   32 00000000 0000000A 
                       LF      EQU              0x0A        ;/n
   33 00000000 00000008 
                       BS      EQU              0x08        ;backspace
   34 00000000 0000001B 
                       ESC     EQU              0x1B        ;escape
   35 00000000 00000020 
                       SPA     EQU              0x20        ;space
   36 00000000 0000007F 
                       DEL     EQU              0x7F        ;delete
   37 00000000         
   38 00000000         ; functions in PLL.s
   39 00000000                 IMPORT           PLL_Init    ;import label PLL_I
                                                            nit but EXPORT must
                                                             be declared in PLL



ARM Macro Assembler    Page 2 


                                                            .s file
   40 00000000         
   41 00000000         ; functions UART.s
   42 00000000                 IMPORT           UART_Init
   43 00000000                 IMPORT           UART_InChar
   44 00000000                 IMPORT           UART_OutChar
   45 00000000         ;functions in portFConfiguration.s
   46 00000000                 IMPORT           GPIOF_Init
   47 00000000                 IMPORT           RED_LED_OFF
   48 00000000                 IMPORT           RED_LED_ON
   49 00000000                 IMPORT           CHECK_SW2
   50 00000000         ;new import sw1
   51 00000000                 IMPORT           CHECK_SW1
   52 00000000                 IMPORT           RxFifo_Init
   53 00000000                 IMPORT           RxFifo_Put
   54 00000000                 IMPORT           RxFifo_Get
   55 00000000                 IMPORT           RxFifo_Size
   56 00000000         
   57 00000000                 AREA             DATA, ALIGN=2
   58 00000000         
   59 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   60 00000000                 THUMB
   61 00000000                 EXPORT           Start
   62 00000000         
   63 00000000                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
   64 00000000         
   65 00000000         ;---------------------OutCRLF---------------------
   66 00000000         ; Output a CR,LF to UART to go to a new line
   67 00000000         ; Input: none
   68 00000000         ; Output: none
   69 00000000         
   70 00000000         CHECK2SW
   71 00000000 B500            PUSH{LR}
   72 00000002 F04F 004E       MOV              R0, #0x4E   ; R0 = 'N'
   73 00000006 F7FF FFFE       BL               CHECK_SW2
   74 0000000A 2D00            CMP              R5, #0x00
   75 0000000C BF18 F7FF 
              FFFE             BLNE             UART_OutChar
   76 00000012 BD00            POP{PC}
   77 00000014         
   78 00000014         CHECKBITE
   79 00000014 B500            PUSH{LR}
   80 00000016 F7FF FFFE       BL               RxFifo_Get
   81 0000001A F7FF FFFE       BL               RxFifo_Size
   82 0000001E BD00            POP{PC}
   83 00000020         
   84 00000020         ZERO_R9
   85 00000020 B500            PUSH{LR}
   86 00000022 F04F 0900       MOV              R9, #0x00
   87 00000026 BD00            POP{PC}
   88 00000028         
   89 00000028         OutCRLF                              ;perform /r/n
   90 00000028 B500            PUSH             {LR}        ; save current valu
                                                            e of LR
   91 0000002A F04F 000D       MOV              R0, #CR     ; R0 = CR (<carriag
                                                            e return>);/r



ARM Macro Assembler    Page 3 


   92 0000002E F7FF FFFE       BL               UART_OutChar ; send <carriage r
                                                            eturn> to the UART`
                                                            
   93 00000032 F04F 000A       MOV              R0, #LF     ; R0 = LF (<line fe
                                                            ed>)/n
   94 00000036 F7FF FFFE       BL               UART_OutChar ; send <line feed>
                                                             to the UART
   95 0000003A BD00            POP              {PC}        ; restore previous 
                                                            value of LR into PC
                                                             (return)
   96 0000003C         
   97 0000003C         Start
   98 0000003C F7FF FFFE       BL               PLL_Init    ; set system clock 
                                                            to 50 MHz
   99 00000040 F7FF FFFE       BL               UART_Init   ; initialize UART
  100 00000044 F7FF FFFE       BL               GPIOF_Init
  101 00000048 F7FF FFEE       BL               OutCRLF     ; go to a new line
  102 0000004C         
  103 0000004C         loop
  104 0000004C         
  105 0000004C F04F 004C       MOV              R0, #0x4C   ; R0 = 'L'
  106 00000050 F7FF FFFE       BL               CHECK_SW1
  107 00000054 2E00            CMP              R6,#0x00
  108 00000056         ;Do reg-arg if 0 then set zero-flag to 1 else to 0
  109 00000056 BF08 F7FF 
              FFFE             BLEQ             UART_OutChar ; echo the charact
                                                            er back to the UART
                                                            
  110 0000005C BF18 F7FF 
              FFCF             BLNE             CHECK2SW
  111 00000062         
  112 00000062 F04F 0052       MOV              R0, #0x52   ; R0 = 'R'
  113 00000066 F7FF FFFE       BL               CHECK_SW2
  114 0000006A 2D00            CMP              R5,#0x00
  115 0000006C         ;Do reg-arg if 0 then set zero-flag to 1 else to 0
  116 0000006C BF08 F7FF 
              FFFE             BLEQ             UART_OutChar ; echo the charact
                                                            er back to the UART
                                                            
  117 00000072         
  118 00000072 F7FF FFCF       BL               CHECKBITE
  119 00000076 2801            CMP              R0, #0x01
  120 00000078 BF08 F7FF 
              FFFE             BLEQ             RED_LED_ON
  121 0000007E         
  122 0000007E F109 0901       ADD              R9, #0x01
  123 00000082 F1B9 0F60       CMP              R9, #0x60
  124 00000086 BF08 F7FF 
              FFFE             BLEQ             RED_LED_OFF
  125 0000008C         
  126 0000008C F1B9 0FFF       CMP              R9, #0xFF
  127 00000090 BF08 F7FF 
              FFC5             BLEQ             ZERO_R9
  128 00000096         
  129 00000096 E7D9            B                loop
  130 00000098         
  131 00000098                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned



ARM Macro Assembler    Page 4 


  132 00000098                 END                          ; end of file
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\main.d -o.\objects\main.o -I.\RTE\_Target_1 -IC:\Keil
_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\
1.1.0\Device\Include\TM4C123 --predefine="__EVAL SETA 1" --predefine="__UVISION
_VERSION SETA 523" --predefine="_RTE_ SETA 1" --predefine="TM4C123GH6PM SETA 1"
 --list=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 57 in file main.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 59 in file main.s
   Uses
      None
Comment: .text unused
CHECK2SW 00000000

Symbol: CHECK2SW
   Definitions
      At line 70 in file main.s
   Uses
      At line 110 in file main.s
Comment: CHECK2SW used once
CHECKBITE 00000014

Symbol: CHECKBITE
   Definitions
      At line 78 in file main.s
   Uses
      At line 118 in file main.s
Comment: CHECKBITE used once
OutCRLF 00000028

Symbol: OutCRLF
   Definitions
      At line 89 in file main.s
   Uses
      At line 101 in file main.s
Comment: OutCRLF used once
Start 0000003C

Symbol: Start
   Definitions
      At line 97 in file main.s
   Uses
      At line 61 in file main.s
Comment: Start used once
ZERO_R9 00000020

Symbol: ZERO_R9
   Definitions
      At line 84 in file main.s
   Uses
      At line 127 in file main.s
Comment: ZERO_R9 used once
loop 0000004C

Symbol: loop
   Definitions
      At line 103 in file main.s
   Uses
      At line 129 in file main.s
Comment: loop used once
7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

BS 00000008

Symbol: BS
   Definitions
      At line 33 in file main.s
   Uses
      None
Comment: BS unused
CR 0000000D

Symbol: CR
   Definitions
      At line 31 in file main.s
   Uses
      At line 91 in file main.s
Comment: CR used once
DEL 0000007F

Symbol: DEL
   Definitions
      At line 36 in file main.s
   Uses
      None
Comment: DEL unused
ESC 0000001B

Symbol: ESC
   Definitions
      At line 34 in file main.s
   Uses
      None
Comment: ESC unused
LF 0000000A

Symbol: LF
   Definitions
      At line 32 in file main.s
   Uses
      At line 93 in file main.s
Comment: LF used once
SPA 00000020

Symbol: SPA
   Definitions
      At line 35 in file main.s
   Uses
      None
Comment: SPA unused
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

CHECK_SW1 00000000

Symbol: CHECK_SW1
   Definitions
      At line 51 in file main.s
   Uses
      At line 106 in file main.s
Comment: CHECK_SW1 used once
CHECK_SW2 00000000

Symbol: CHECK_SW2
   Definitions
      At line 49 in file main.s
   Uses
      At line 73 in file main.s
      At line 113 in file main.s

GPIOF_Init 00000000

Symbol: GPIOF_Init
   Definitions
      At line 46 in file main.s
   Uses
      At line 100 in file main.s
Comment: GPIOF_Init used once
PLL_Init 00000000

Symbol: PLL_Init
   Definitions
      At line 39 in file main.s
   Uses
      At line 98 in file main.s
Comment: PLL_Init used once
RED_LED_OFF 00000000

Symbol: RED_LED_OFF
   Definitions
      At line 47 in file main.s
   Uses
      At line 124 in file main.s
Comment: RED_LED_OFF used once
RED_LED_ON 00000000

Symbol: RED_LED_ON
   Definitions
      At line 48 in file main.s
   Uses
      At line 120 in file main.s
Comment: RED_LED_ON used once
RxFifo_Get 00000000

Symbol: RxFifo_Get
   Definitions
      At line 54 in file main.s
   Uses
      At line 80 in file main.s
Comment: RxFifo_Get used once
RxFifo_Init 00000000




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

Symbol: RxFifo_Init
   Definitions
      At line 52 in file main.s
   Uses
      None
Comment: RxFifo_Init unused
RxFifo_Put 00000000

Symbol: RxFifo_Put
   Definitions
      At line 53 in file main.s
   Uses
      None
Comment: RxFifo_Put unused
RxFifo_Size 00000000

Symbol: RxFifo_Size
   Definitions
      At line 55 in file main.s
   Uses
      At line 81 in file main.s
Comment: RxFifo_Size used once
UART_InChar 00000000

Symbol: UART_InChar
   Definitions
      At line 43 in file main.s
   Uses
      None
Comment: UART_InChar unused
UART_Init 00000000

Symbol: UART_Init
   Definitions
      At line 42 in file main.s
   Uses
      At line 99 in file main.s
Comment: UART_Init used once
UART_OutChar 00000000

Symbol: UART_OutChar
   Definitions
      At line 44 in file main.s
   Uses
      At line 75 in file main.s
      At line 92 in file main.s
      At line 94 in file main.s
      At line 109 in file main.s
      At line 116 in file main.s

13 symbols
362 symbols in table
